@using LibraryManagement.Models.ModelViews
@model IEnumerable<BookAndEvent>
@{
	ViewData["Title"] = "Home Page";
}
<div class="text-center">
	<h1 class="display-4">Welcome</h1>
	<p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
<div class="books">
	<h1>All Books</h1>
	@{
		if (!Model.Any()) {
			<h4>No Books Found</h4>
		} else {
			<table class="table">
				<thead>
					<tr>
						<th>Title</th>
						<th>Author</th>
						<th>Published Date</th>
						<th>Reviews</th>
					</tr>
				</thead>
				<tbody>
					@foreach (BookAndEvent book in Model) {
						@if(book.Source.Equals("Book"))
						{
							<tr onclick="document.location.href='Book/Book/@book.ID'">
								<td>@book.Title</td>
								<td>@book.AuthOrLocation</td>
								<td>@book.Date</td>
								<td>
									<a asp-controller="Book" asp-action="Book" asp-route-id="@book.ID">Reviews</a>
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		}
	}
</div>
<div class="events">
	<h1>Upcomming Events</h1>
	@{
		if (!Model.Any()) {
			<h4>No Upcomming Events Found</h4>
		} else {
			<table class="table">
				<thead>
					<tr>
						<th>Title</th>
						<th>Location</th>
						<th>Date & Time</th>
						<th>Reviews</th>
					</tr>
				</thead>
				<tbody>
					@foreach (BookAndEvent e in Model) {
						@if (e.Source.Equals("Event"))
						{
							<tr onclick="document.location.href='Event/Event/@e.ID'">
								<td>@e.Title</td>
								<td>@e.AuthOrLocation</td>
								<td>@e.Date.ToString(), @e.Time.ToString()</td>
								<td>
									<a asp-controller="Event" asp-action="Event" asp-route-id="@e.ID">Reviews</a>
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		}
	}
</div>

<!--
    Home page will have a collection of the most popular books and a list of upcomming events.
    To get the most popular books, we will need to run a query counting how many times a certain book has
        been checked out, and then sort by count
-->
