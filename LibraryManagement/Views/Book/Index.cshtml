@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManage
@model IEnumerable<Book>
@{
	ViewData["Title"] = "All Books";
}

<h1>All Books</h1>
@{
	if(Model == null || !Model.Any())
	{
		<h4>No Books Found</h4>
	}
	else
	{
		<table class="table table-striped table-hover table-bordered">
			<thead>
				<tr>
					<th scope="col">Title</th>
					<th scope="col">Author</th>
					<th scope="col">Published Date</th>
					<th scope="col">Actions</th>
				</tr>
			</thead>
			<tbody>
				@foreach (Book book in Model) {
					<tr onclick="document.location.href='Book/Book/@book.BookId'">
						<th scope="row">@book.Title</th>
						<td>@book.Author</td>
						<td>@book.Published.ToShortDateString()</td>
						<td>
							<a asp-controller="Book" asp-action="Book" asp-route-id="@book.BookId">Reviews</a>
							@if (User.IsInRole("Admin")){
								<a asp-action="Delete" asp-route-id="@book.BookId">Delete</a>
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

<!--Update this for the create action whatever we name it -->
@if (User.IsInRole("Admin")) {
	<a asp-action="CreateBook">Create New Book</a>
}
