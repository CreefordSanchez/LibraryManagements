@using LibraryManagement.Models.ModelViews
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManage
@model List<EventAndReview>
@{
	EventAndReview? first = null;
	if (Model == null || !Model.Any()) {
		ViewData["Title"] = "No Event Found";
	} else {
		first = Model.First();
		ViewData["Title"] = first.Title;
	}
}

@if (first == null)
{
	<h1>@ViewBag.Event.Title</h1>
	<h5>Scheduled on @ViewBag.Event.Date.ToString()</h5>
	<p>At @ViewBag.Event.Time.ToString()</p>
	<p>@ViewBag.Event.Location</p>
} else
{
	
	<div>
		<div class="eventInfo">
			<h1>@first.Title</h1>
			<h5>@first.Date, @first.Time</h5>
			<p>@first.Location</p>
		</div>
		<div class="reviews">
			<h5>Reviews</h5>
			<table class="table">
				<thead>
					<tr>
						<th>User</th>
						<th>Rating</th>
						<th>Comment</th>
					</tr>
				</thead>
				<tbody>
					@foreach (EventAndReview review in Model) {
						var user = UserManager.FindByIdAsync(review.UserId).Result;
						<tr>
							<td>@user</td>
							<td>@review.Rating</td>
							<td>@review.Comment</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}

@if (User.IsInRole("User")) {
	<a asp-controller="EventReview" asp-action="CreateEventReview">Add Review for this Event</a>
}