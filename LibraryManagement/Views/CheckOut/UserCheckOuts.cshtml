@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManage
@model IEnumerable<CheckOut>
@{
	string userId = UserManager.GetUserId(User);
	var user = UserManager.FindByIdAsync(userId).Result;
	ViewData["Title"] = $"CheckOuts for {user}";
	DateOnly today = DateOnly.FromDateTime(DateTime.Today);
}

<h1>Current CheckOuts</h1>

@{
	if (Model == null || !Model.Any()) {
		<h4>No Active CheckOuts</h4>
	} else {
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<th scope="col">Book Title</th>
					<th scope="col">CheckOut Date</th>
					<th scope="col">DueDate</th>
				</tr>
			</thead>
			<tbody>
				@foreach (CheckOut checkout in Model) {
					<tr class="@(checkout.DueDate >= today ? "" : "table-danger" )">
						<th scope="row">@checkout.Book.Title</th>
						<td>@checkout.CheckoutDate</td>
						<td>@checkout.DueDate</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

<!--Update this for the create action whatever we name it -->
@if (User.IsInRole("Admin")) {
	<a asp-action="CreateCheckOut">Create New Checkout</a>
}