@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManage
@model IEnumerable<EventReview>
@{
	ViewData["Title"] = "All Evenets";
}

<h1>All Event Reviews</h1>
@{
	if (Model == null || !Model.Any()) {
		<h4>No Reviews for any event Found</h4>
	} else {
		<table class="table">
			<thead>
				<tr>
					<th>Event Title</th>
					<th>User Id</th>
					<th>Rating</th>
				</tr>
			</thead>
			<tbody>
				@foreach (EventReview er in Model) {
					var user = UserManager.FindByIdAsync(er.UserId).Result;
					<tr>
						<td>@er.Event.Title</td>
						<td>@user</td>
						<td>@er.Rating</td>
						<td>
							@if (User.IsInRole("Admin")) {
								<a asp-controller="EventReview" asp-action="Delete" asp-route-id="@er.EventReviewId">Delete</a>
								<a asp-action="EditReview" asp-route-id="@er.EventReviewId">Edit</a>
							}
						
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

@if (User.IsInRole("User")) {
	<a asp-action="CreateEventReview">Create New Event Review</a>
}

